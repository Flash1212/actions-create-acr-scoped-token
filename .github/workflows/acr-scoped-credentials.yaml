---

name: CI

on:
  workflow_dispatch:
    inputs:
      AZURE_REGISTRY:
        description: The registry to docker push to
        required: true
        type: string
      AZURE_REPOSITORY:
        description: The name of the repository to push to
        required: true
        type: string
      AZURE_TOKEN_NAME:
        description: The name of the token which will match the repo minus owner
        required: true
        type: string

jobs:
  azure-work:
    runs-on: ubuntu-latest
    env:
      AZURE_REGISTRY: ${{ github.event.inputs.AZURE_REGISTRY }}
      AZURE_REPOSITORY: ${{ github.event.inputs.AZURE_REPOSITORY }}
      AZURE_TOKEN_NAME: ${{ github.event.inputs.AZURE_TOKEN_NAME }}
    steps:
      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Create Temporary TOKEN
        id: token
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION }}
          AZURE_TOKEN=$(az acr token create \
          --name $AZURE_TOKEN_NAME --registry $AZURE_REGISTRY \
          --repository ${AZURE_REPOSITORY,,} content/write content/read \
          --output json --only-show-errors \
          --expiration $(TZ=UTC date -d '15 mins' +%Y-%m-%dT%H:%M:%SZ) \
          --subscription ${{ secrets.AZURE_SUBSCRIPTION }} \
          | jq '.credentials.passwords[0].value' | awk -F '"' '{print $2}')
          echo "AZURE_TOKEN=$AZURE_TOKEN" >> $GITHUB_ENV
          echo "::set-output name=$AZURE_TOKEN_NAME::$AZURE_TOKEN"

      - name: Inject Credentials
        run: |
          gh secret set \
          AZURE_TOKEN --body $AZURE_TOKEN --repos $AZURE_REPOSITORY
          gh secret set \
          AZURE_TOKEN_NAME --body $AZURE_TOKEN_NAME --repos $AZURE_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
# az acr login --name ${AZURE_REGISTRY,,} --username $AZURE_TOKEN_NAME \
#           - $AZURE_TOKEN --only-show-errors
